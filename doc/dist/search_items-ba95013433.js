searchNodes=[{"doc":"BankingApi keeps the contexts that define your domain and business logic.Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.","ref":"BankingApi.html","title":"BankingApi","type":"module"},{"doc":"Accounts Context.Este módulo é responsável por expor as funcionalidades relacionadas à acounts e users.Resumidamente, o objetivo do context é desacoplar a responsabilidade de models e controllers.","ref":"BankingApi.Accounts.html","title":"BankingApi.Accounts","type":"module"},{"doc":"Cria um user, uma account(conta bancária) e faz a associação entre ambos no banco de dadosO argumento da função é:params: Um map com os dados de user a serem inseridos.Há dois possíveis retornos para a função:Uma tupla do tipo: {:ok, user, account}, onde user e account são structsUma tupla do tipo: {:error, changeset}","ref":"BankingApi.Accounts.html#create_user/1","title":"BankingApi.Accounts.create_user/1","type":"function"},{"doc":"Busca por uma account.O argumento desta função é:id: O id da accountO retorno desta função é uma struct de account.","ref":"BankingApi.Accounts.html#get!/1","title":"BankingApi.Accounts.get!/1","type":"function"},{"doc":"Busca o user no banco de dados e vincula o resultado com a respectiva conta bancária.Argumentos da função:id: O id do usuárioO retorno da função é uma user struct carregada com a respectiva account struct.","ref":"BankingApi.Accounts.html#get_user!/1","title":"BankingApi.Accounts.get_user!/1","type":"function"},{"doc":"Account Model.Este módulo é responsável por mapear e validar os valores da tabela accounts entre o banco de dados e o Elixir.","ref":"BankingApi.Accounts.Account.html","title":"BankingApi.Accounts.Account","type":"module"},{"doc":"Este módulo é responsável por manipular os erros de autenticação","ref":"BankingApi.Accounts.Auth.ErrorHandler.html","title":"BankingApi.Accounts.Auth.ErrorHandler","type":"module"},{"doc":"Função que trata a resposta de erro relacionada a autenticação.Os argumentos da função são:conn: Informações sobre a conexão e a requesttype: É o motivo do erro de atutenticação","ref":"BankingApi.Accounts.Auth.ErrorHandler.html#auth_error/3","title":"BankingApi.Accounts.Auth.ErrorHandler.auth_error/3","type":"function"},{"doc":"Módulo responsável por lidar com as funcionalidades de autenticação do Guardian.Conceitos importantes sobre o Guardian:claims: informações sobre o token, como, tempo de duração, tipo de acesso, subject e o próprio tokenresource: O que será autenticado. No nosso caso, o user.token: É um hash muito grande que armazena as informações de todas as claims.subject ou sub: É um identificador curto que é usado para identificar a resource","ref":"BankingApi.Accounts.Auth.Guardian.html","title":"BankingApi.Accounts.Auth.Guardian","type":"module"},{"doc":"Callback implementation for Guardian.after_encode_and_sign/4.","ref":"BankingApi.Accounts.Auth.Guardian.html#after_encode_and_sign/4","title":"BankingApi.Accounts.Auth.Guardian.after_encode_and_sign/4","type":"function"},{"doc":"Callback implementation for Guardian.after_sign_in/5.","ref":"BankingApi.Accounts.Auth.Guardian.html#after_sign_in/5","title":"BankingApi.Accounts.Auth.Guardian.after_sign_in/5","type":"function"},{"doc":"Faz a autenticação do usuário no sistema e cria o token de autenticaçãoArgumentos para a função:email: email do usuáriosenha: senha do usuárioExistem dois possíveis retornos da função:{:error, :unauthorized}: Caso falhe a autenticação{:ok, user, token}: Onde, user é uma user struct já com as informações de account e token é o token gerado pelo Guardian","ref":"BankingApi.Accounts.Auth.Guardian.html#authenticate/2","title":"BankingApi.Accounts.Auth.Guardian.authenticate/2","type":"function"},{"doc":"Callback implementation for Guardian.before_sign_out/3.","ref":"BankingApi.Accounts.Auth.Guardian.html#before_sign_out/3","title":"BankingApi.Accounts.Auth.Guardian.before_sign_out/3","type":"function"},{"doc":"Callback implementation for Guardian.build_claims/3.","ref":"BankingApi.Accounts.Auth.Guardian.html#build_claims/3","title":"BankingApi.Accounts.Auth.Guardian.build_claims/3","type":"function"},{"doc":"Fetches the configuration for this module","ref":"BankingApi.Accounts.Auth.Guardian.html#config/0","title":"BankingApi.Accounts.Auth.Guardian.config/0","type":"function"},{"doc":"Returns a resolved value of the configuration found at a key.See Guardian.Config.resolve_value/1.","ref":"BankingApi.Accounts.Auth.Guardian.html#config/2","title":"BankingApi.Accounts.Auth.Guardian.config/2","type":"function"},{"doc":"Decodes and verifies a token using the configuration on the implementation module.See Guardian.decode_and_verify/4","ref":"BankingApi.Accounts.Auth.Guardian.html#decode_and_verify/3","title":"BankingApi.Accounts.Auth.Guardian.decode_and_verify/3","type":"function"},{"doc":"The default type of token for this module","ref":"BankingApi.Accounts.Auth.Guardian.html#default_token_type/0","title":"BankingApi.Accounts.Auth.Guardian.default_token_type/0","type":"function"},{"doc":"Encodes the claims. See Guardian.encode_and_sign/4 for more information","ref":"BankingApi.Accounts.Auth.Guardian.html#encode_and_sign/3","title":"BankingApi.Accounts.Auth.Guardian.encode_and_sign/3","type":"function"},{"doc":"Exchanges a token of one type for another.See Guardian.exchange for more information","ref":"BankingApi.Accounts.Auth.Guardian.html#exchange/4","title":"BankingApi.Accounts.Auth.Guardian.exchange/4","type":"function"},{"doc":"Callback implementation for Guardian.on_exchange/3.","ref":"BankingApi.Accounts.Auth.Guardian.html#on_exchange/3","title":"BankingApi.Accounts.Auth.Guardian.on_exchange/3","type":"function"},{"doc":"Callback implementation for Guardian.on_refresh/3.","ref":"BankingApi.Accounts.Auth.Guardian.html#on_refresh/3","title":"BankingApi.Accounts.Auth.Guardian.on_refresh/3","type":"function"},{"doc":"Callback implementation for Guardian.on_revoke/3.","ref":"BankingApi.Accounts.Auth.Guardian.html#on_revoke/3","title":"BankingApi.Accounts.Auth.Guardian.on_revoke/3","type":"function"},{"doc":"Callback implementation for Guardian.on_verify/3.","ref":"BankingApi.Accounts.Auth.Guardian.html#on_verify/3","title":"BankingApi.Accounts.Auth.Guardian.on_verify/3","type":"function"},{"doc":"Provides the content of the token but without verification of either the claims or the signature.Claims will be present at the :claims key.See Guardian.peek/2 for more information","ref":"BankingApi.Accounts.Auth.Guardian.html#peek/1","title":"BankingApi.Accounts.Auth.Guardian.peek/1","type":"function"},{"doc":"Refresh a token.See Guardian.refresh for more information","ref":"BankingApi.Accounts.Auth.Guardian.html#refresh/2","title":"BankingApi.Accounts.Auth.Guardian.refresh/2","type":"function"},{"doc":"Busca o usuário no banco de dados a partir do subject.O retorno da função é uma tupla, que contém o atom :ok e a user struct","ref":"BankingApi.Accounts.Auth.Guardian.html#resource_from_claims/1","title":"BankingApi.Accounts.Auth.Guardian.resource_from_claims/1","type":"function"},{"doc":"Fetch the resource and claims directly from a tokenSee Guardian.resource_from_token for more information","ref":"BankingApi.Accounts.Auth.Guardian.html#resource_from_token/3","title":"BankingApi.Accounts.Auth.Guardian.resource_from_token/3","type":"function"},{"doc":"Revoke a token.See Guardian.revoke for more information","ref":"BankingApi.Accounts.Auth.Guardian.html#revoke/2","title":"BankingApi.Accounts.Auth.Guardian.revoke/2","type":"function"},{"doc":"Busca o subject do user para o token.Os argumentos dessa função são:user: Uma user struct que deve conter o valor id preenchidoO retorno da função é uma tupla com dois valores::okO user.id em formato string","ref":"BankingApi.Accounts.Auth.Guardian.html#subject_for_token/2","title":"BankingApi.Accounts.Auth.Guardian.subject_for_token/2","type":"function"},{"doc":"Callback implementation for Guardian.verify_claims/2.","ref":"BankingApi.Accounts.Auth.Guardian.html#verify_claims/2","title":"BankingApi.Accounts.Auth.Guardian.verify_claims/2","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html","title":"BankingApi.Accounts.Auth.Guardian.Plug","type":"module"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#authenticated?/2","title":"BankingApi.Accounts.Auth.Guardian.Plug.authenticated?/2","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#clear_remember_me/2","title":"BankingApi.Accounts.Auth.Guardian.Plug.clear_remember_me/2","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#current_claims/2","title":"BankingApi.Accounts.Auth.Guardian.Plug.current_claims/2","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#current_resource/2","title":"BankingApi.Accounts.Auth.Guardian.Plug.current_resource/2","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#current_token/2","title":"BankingApi.Accounts.Auth.Guardian.Plug.current_token/2","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#implementation/0","title":"BankingApi.Accounts.Auth.Guardian.Plug.implementation/0","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#put_current_claims/3","title":"BankingApi.Accounts.Auth.Guardian.Plug.put_current_claims/3","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#put_current_resource/3","title":"BankingApi.Accounts.Auth.Guardian.Plug.put_current_resource/3","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#put_current_token/3","title":"BankingApi.Accounts.Auth.Guardian.Plug.put_current_token/3","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#put_session_token/3","title":"BankingApi.Accounts.Auth.Guardian.Plug.put_session_token/3","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#remember_me/4","title":"BankingApi.Accounts.Auth.Guardian.Plug.remember_me/4","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#remember_me_from_token/4","title":"BankingApi.Accounts.Auth.Guardian.Plug.remember_me_from_token/4","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#sign_in/4","title":"BankingApi.Accounts.Auth.Guardian.Plug.sign_in/4","type":"function"},{"doc":"","ref":"BankingApi.Accounts.Auth.Guardian.Plug.html#sign_out/2","title":"BankingApi.Accounts.Auth.Guardian.Plug.sign_out/2","type":"function"},{"doc":"O objetivo deste módulo é restringir o acesso aos endpoints da aplicação somente para usuários que estejam logados. Para isso, este módulo foi adicionado ao pipe_through do router.ex","ref":"BankingApi.Accounts.Auth.Pipeline.html","title":"BankingApi.Accounts.Auth.Pipeline","type":"module"},{"doc":"Callback implementation for Plug.call/2.","ref":"BankingApi.Accounts.Auth.Pipeline.html#call/2","title":"BankingApi.Accounts.Auth.Pipeline.call/2","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"BankingApi.Accounts.Auth.Pipeline.html#init/1","title":"BankingApi.Accounts.Auth.Pipeline.init/1","type":"function"},{"doc":"Modulo responsável por autenticar um usuário.","ref":"BankingApi.Accounts.Auth.Session.html","title":"BankingApi.Accounts.Auth.Session","type":"module"},{"doc":"Função que autentica se o email e senha passaos existem no banco de dados.Argumentos para a função:email: email do usuáriosenha: senha do usuárioO retorno da função podem ser três tipos de tupla:{:error, :not_found}: Caso o email não exista no banco de dados{:ok, user}: Onde, user é uma user struct já com as informações de account{:error, :unauthorized}","ref":"BankingApi.Accounts.Auth.Session.html#authenticate/2","title":"BankingApi.Accounts.Auth.Session.authenticate/2","type":"function"},{"doc":"Esse é o User Model. Este módulo é responsável por mapear os valores do banco de dados com o Elixir e validá-los.","ref":"BankingApi.Accounts.User.html","title":"BankingApi.Accounts.User","type":"module"},{"doc":"Operations Context.Este módulo é responsável por expor as funcionalidades que atuam sobre as operações transfer e withdraw.Resumidamente, o objetivo de um context é desacoplar a responsabilidade de models e controllers.","ref":"BankingApi.Operations.html","title":"BankingApi.Operations","type":"module"},{"doc":"Verifica se está transferindo para a mesma conta.Os argumentos da função são:from: account struct da conta que realizará a transferênciato_id: id da conta que receberá a transferência","ref":"BankingApi.Operations.html#is_transfering_to_same_account?/2","title":"BankingApi.Operations.is_transfering_to_same_account?/2","type":"function"},{"doc":"Faz a soma de amount na conta bancária.Os argumentos da função são:account: É uma account structamount: É a quantidade a ser somadaO atom :sum.O retorno da função é uma tupla contendo o status da operação de update no banco de dados.","ref":"BankingApi.Operations.html#perform_operation/3","title":"BankingApi.Operations.perform_operation/3","type":"function"},{"doc":"Inicia a operação de transferência bancária.Os argumentos desta função são:from: É a account struct da conta pagadora.to_id: O número da conta recebedora (id da conta).amount: Quantidade a ser transferida.Há possíveis retornos para a função. Eles podem ser:{:ok, message}: Caso a transferência tenha ocorrido com sucesso{:error, message}: Caso o saldo da conta seja menor do que o valor a ser transferido.Qualquer retorno da função handle_feedback/2Um dos possíveis motivos da operação não ser realizada (e retornar error), é se o valor amount a ser transferido é maior do que from.balance.","ref":"BankingApi.Operations.html#transfer/3","title":"BankingApi.Operations.transfer/3","type":"function"},{"doc":"Valida os dados de account antes que eles sejam inseridos no banco de dados.Os argumentos da função são:account: É uma struc de account, e representa a conta que será atualizada.params: É um map, e contém os valores a serem atualizados.","ref":"BankingApi.Operations.html#update_account/2","title":"BankingApi.Operations.update_account/2","type":"function"},{"doc":"Inicia a operação de saque.Os argumentos desta função são:from: É a account struct de onde será feito saque.amount: Quantidade a ser transferida.Há possíveis retornos para a função. Eles podem ser:{:ok, message}: Caso o saque tenha ocorrido com sucesso{:error, message}: Caso o saldo da conta seja menor do que o valor de saque.Qualquer retorno da função handle_feedback/2Um dos possíveis motivos da operação não ser realizada, é se o valor amount é maior do que from.balance.","ref":"BankingApi.Operations.html#withdraw/2","title":"BankingApi.Operations.withdraw/2","type":"function"},{"doc":"","ref":"BankingApi.Repo.html","title":"BankingApi.Repo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3.","ref":"BankingApi.Repo.html#aggregate/3","title":"BankingApi.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4.","ref":"BankingApi.Repo.html#aggregate/4","title":"BankingApi.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2.","ref":"BankingApi.Repo.html#all/2","title":"BankingApi.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2.","ref":"BankingApi.Repo.html#checkout/2","title":"BankingApi.Repo.checkout/2","type":"function"},{"doc":"","ref":"BankingApi.Repo.html#child_spec/1","title":"BankingApi.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0.","ref":"BankingApi.Repo.html#config/0","title":"BankingApi.Repo.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1.","ref":"BankingApi.Repo.html#default_options/1","title":"BankingApi.Repo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2.","ref":"BankingApi.Repo.html#delete/2","title":"BankingApi.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2.","ref":"BankingApi.Repo.html#delete!/2","title":"BankingApi.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2.","ref":"BankingApi.Repo.html#delete_all/2","title":"BankingApi.Repo.delete_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2.","ref":"BankingApi.Repo.html#exists?/2","title":"BankingApi.Repo.exists?/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3.","ref":"BankingApi.Repo.html#get/3","title":"BankingApi.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3.","ref":"BankingApi.Repo.html#get!/3","title":"BankingApi.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3.","ref":"BankingApi.Repo.html#get_by/3","title":"BankingApi.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3.","ref":"BankingApi.Repo.html#get_by!/3","title":"BankingApi.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0.","ref":"BankingApi.Repo.html#get_dynamic_repo/0","title":"BankingApi.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0.","ref":"BankingApi.Repo.html#in_transaction?/0","title":"BankingApi.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2.","ref":"BankingApi.Repo.html#insert/2","title":"BankingApi.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2.","ref":"BankingApi.Repo.html#insert!/2","title":"BankingApi.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3.","ref":"BankingApi.Repo.html#insert_all/3","title":"BankingApi.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2.","ref":"BankingApi.Repo.html#insert_or_update/2","title":"BankingApi.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2.","ref":"BankingApi.Repo.html#insert_or_update!/2","title":"BankingApi.Repo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2.","ref":"BankingApi.Repo.html#load/2","title":"BankingApi.Repo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2.","ref":"BankingApi.Repo.html#one/2","title":"BankingApi.Repo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2.","ref":"BankingApi.Repo.html#one!/2","title":"BankingApi.Repo.one!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3.","ref":"BankingApi.Repo.html#preload/3","title":"BankingApi.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3.","ref":"BankingApi.Repo.html#prepare_query/3","title":"BankingApi.Repo.prepare_query/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1.","ref":"BankingApi.Repo.html#put_dynamic_repo/1","title":"BankingApi.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query/4 for more information.","ref":"BankingApi.Repo.html#query/3","title":"BankingApi.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query!/4 for more information.","ref":"BankingApi.Repo.html#query!/3","title":"BankingApi.Repo.query!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1.","ref":"BankingApi.Repo.html#rollback/1","title":"BankingApi.Repo.rollback/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1.","ref":"BankingApi.Repo.html#start_link/1","title":"BankingApi.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1.","ref":"BankingApi.Repo.html#stop/1","title":"BankingApi.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2.","ref":"BankingApi.Repo.html#stream/2","title":"BankingApi.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL.See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"BankingApi.Repo.html#to_sql/2","title":"BankingApi.Repo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2.","ref":"BankingApi.Repo.html#transaction/2","title":"BankingApi.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2.","ref":"BankingApi.Repo.html#update/2","title":"BankingApi.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2.","ref":"BankingApi.Repo.html#update!/2","title":"BankingApi.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3.","ref":"BankingApi.Repo.html#update_all/3","title":"BankingApi.Repo.update_all/3","type":"function"},{"doc":"Transactions Context.Este módulo é responsável por buscar no banco de dados as transações armazenadas na tabela transactions.Resumidamente, o objetivo de um context é desacoplar a responsabilidade de models e controllers.","ref":"BankingApi.Transactions.html","title":"BankingApi.Transactions","type":"module"},{"doc":"Retorna as transações armazenadas no banco de dados, e a soma da quantia de todas as transações.O retorno da função é um map contendo o total transacionado e a lista de transações: %{total: 1000, transactions: [%Transactions{}, ...]}Examplesiex&gt; Transactions.all() %{total: 100, transactions: [%Transactions{}, ...]}","ref":"BankingApi.Transactions.html#all/0","title":"BankingApi.Transactions.all/0","type":"function"},{"doc":"Retorna as transações ocorridas na data date e a quantia total transacionada na data.O argumento da função é:date: A data em formato string. A data deve seguir o formato: &quot;yyyy-mm-dd&quot;.O retorno da função é um map e segue o padrão: %{total: 1000, transactions: [%Transactions{}, ...]}Examplesiex&gt; Transactions.day(&quot;2020-02-02&quot;) %{total: 22, transactions: [%Transactions{}, ...]}","ref":"BankingApi.Transactions.html#day/1","title":"BankingApi.Transactions.day/1","type":"function"},{"doc":"Insere a transaction no banco de dados.O argumento da função é o map params que contém todos os valores a serem inseridos na tabela transactions. Os valores do map params e obrigatoriedade de cada um deles são definidos pela transaction modelO retorno da função é uma tupla, e retornará o atom :ok, caso a inserção tenha ocorrido com sucesso, ou :error, caso haja falha durante a inserção.Examplesiex&gt; Transactions.insert_transaction(%{value: &quot;111&quot;, account_from: &quot;3&quot;, account_to: &quot;~&quot;, type: &quot;withdraw&quot;, date: &quot;2019-02-02&quot;}) {:ok, %Transaction{}}","ref":"BankingApi.Transactions.html#insert_transaction/1","title":"BankingApi.Transactions.insert_transaction/1","type":"function"},{"doc":"Retorna as transações ocorridas no mês month do ano year e a quantia total transacionada na data.Os argumentos da função são:year: O ano em formato string. O ano deve seguir o formato: &quot;yyyy&quot;.month: O mês em formato string. O mês deve seguir o formato: &quot;mm&quot;O retorno da função é um map e segue o padrão: %{total: 1000, transactions: [%Transactions{}, ...]}Examplesiex&gt; Transactions.month(&quot;2020&quot;, &quot;02&quot;) %{total: 22, transactions: [%Transactions{}, ...]}","ref":"BankingApi.Transactions.html#month/2","title":"BankingApi.Transactions.month/2","type":"function"},{"doc":"Chama a função BankingApi.Transactions.Helper.validate_date/2 que faz a validação de data.Os argumentos da função são:date: A data, em formato string, a ser validadafail_message: A mensagem a ser exibida ao usuário caso a data passada esteja inválidaOs dois possíveis retornos da função são uma túpla contendo o atom :ok, caso a data seja válida, ou uma tupla contendo o atom :error e a mensagem fail_message, caso a data seja inválidaExamplesiex&gt; Transactions.validate_date(&quot;2020&quot;, &quot;this is an invalid year&quot;) {:ok, &quot;A data é válida&quot;} iex&gt; Transactions.validate_date(&quot;-2020&quot;, &quot;this is an invalid year&quot;) {:error, &quot;this is an invalid year&quot;}","ref":"BankingApi.Transactions.html#validate_date/2","title":"BankingApi.Transactions.validate_date/2","type":"function"},{"doc":"Retorna as transações ocorridas no ano year e a quantia total transacionada na data.O argumento da função é: year: O ano em formato string. O ano deve seguir o formato: &quot;yyyy&quot;.O retorno da função é um map contendo o total transacionado e a lista de transações: %{total: 1000, transactions: [%Transactions{}, ...]}Examplesiex&gt; Transactions.year(&quot;2020&quot;) %{total: 33, transactions: [%Transactions{}, ...]}","ref":"BankingApi.Transactions.html#year/1","title":"BankingApi.Transactions.year/1","type":"function"},{"doc":"Modulo helper ao Transactions Context","ref":"BankingApi.Transactions.Helper.html","title":"BankingApi.Transactions.Helper","type":"module"},{"doc":"A função monta o que será o report de transações.O argumento da função é:transactions: Uma lista de transaction structsO retorno da função é um map com duas keys:total: O valor total transacionadotransactions: Uma lista de transaction structsExamplesiex&gt; transactions = [ %{ value: &quot;100&quot;, account_from: &quot;1&quot;, type: &quot;withdraw&quot;, account_to: &quot;~&quot;, date: ~D[2019-10-30] }] iex&gt; Helper.create_report(transactions) %{ total: #Decimal&lt;100&gt;, transactions: [%{account_from: &quot;1&quot;, account_to: &quot;~&quot;, date: ~D[2019-10-30], type: &quot;withdraw&quot;, value: &quot;100&quot;}] }","ref":"BankingApi.Transactions.Helper.html#create_report/1","title":"BankingApi.Transactions.Helper.create_report/1","type":"function"},{"doc":"A função monta e executa a query que sera executada na tabela tranactions.A consulta no banco de dados é feita baseada em um período de tempo. Portanto, os argumentos da função são:start_date: O primeiro dia a ser levado em consideração para a consulta. A variável é do tipo string e deve seguir o formato &quot;yyyy-mm-dd&quot;end_date: O último dia a ser levado em consideração para a consulta. A variável é do tipo string e deve seguir o formato &quot;yyyy-mm-dd&quot;O retorno da função é um map com duas keys:total: O valor total transacionadotransactions: Uma lista de transaction structsExamplesiex&gt; Helper.do_query(&quot;2020-01-01&quot;, &quot;2020-12-30&quot;) %{total: #Decimal&lt;100&gt;, transactions: [%Transactions{}, ...]}","ref":"BankingApi.Transactions.Helper.html#do_query/2","title":"BankingApi.Transactions.Helper.do_query/2","type":"function"},{"doc":"A função busca todos os registros da tabela transactions.O retorno da função é uma lista de transaction structsExamplesiex&gt; Helper.list_transactions() [%Transactions{}, ...]","ref":"BankingApi.Transactions.Helper.html#list_transactions/0","title":"BankingApi.Transactions.Helper.list_transactions/0","type":"function"},{"doc":"A função busca os registros da tabela transactions inseridos no dia especificado.O argumento da função é:date: A data em formato string. A data deve seguir o formato: &quot;yyyy-mm-dd&quot;.O retorno da função é uma lista de transaction structsExamplesiex&gt; Helper.query_by_day(&quot;2009-01-01&quot;) [%Transactions{}, ...]","ref":"BankingApi.Transactions.Helper.html#query_by_day/1","title":"BankingApi.Transactions.Helper.query_by_day/1","type":"function"},{"doc":"A função busca os registros da tabela transactions inseridos no ano year e no mês month.Os argumentos da função são:year: O ano em formato integer. O ano deve seguir o formato: yyyy.month: O mês em formato integer. O mês deve seguir o formato: mmO retorno da função é um map que contém o total transacionado e uma lista de transaction structsExamplesiex&gt; Helper.query_by_month(2020, 10) %{total: #Decimal&lt;100&gt;, transactions: [%Transactions{}, ...]}","ref":"BankingApi.Transactions.Helper.html#query_by_month/2","title":"BankingApi.Transactions.Helper.query_by_month/2","type":"function"},{"doc":"A função busca os registros da tabela transactions inseridos no ano year.O argumento da função é:year: O ano em formato integer. O ano deve seguir o formato: yyyy.O retorno da função é um map que contém o total transacionado e uma lista de transaction structsExamplesiex&gt; Helper.query_by_year(2020) %{total: #Decimal&lt;100&gt;, transactions: [%Transactions{}, ...]}","ref":"BankingApi.Transactions.Helper.html#query_by_year/1","title":"BankingApi.Transactions.Helper.query_by_year/1","type":"function"},{"doc":"A função é responsável por somar os valores de transaction.value de todas as structs passadas dentro da lista transactionsO argumento da função é a lista transactions que contém as structs de transactionO retorno da função é o resultado da soma de todas as transaction.value da lista","ref":"BankingApi.Transactions.Helper.html#sum_amount/1","title":"BankingApi.Transactions.Helper.sum_amount/1","type":"function"},{"doc":"Valida se o ano, mês ou dia são uma string vazia ou contém o caractére &quot;-&quot;.Os argumentos da função são:date: Pode ser o ano, o mês ou o dia, em formato string, a ser validadofail_message: A mensagem a ser exibida ao usuário caso a data passada esteja inválidaOs dois possíveis retornos da função são uma túpla contendo o atom :ok, caso a data seja válida, ou uma tupla contendo o atom :error e a mensagem fail_message, caso a data seja inválidaExamplesiex&gt; Helper.validate_date(&quot;2020&quot;, &quot;this is an invalid year&quot;) {:ok, &quot;A data é válida&quot;} iex&gt; Helper.validate_date(&quot;-2020&quot;, &quot;this is an invalid year&quot;) {:error, &quot;this is an invalid year&quot;}","ref":"BankingApi.Transactions.Helper.html#validate_date/2","title":"BankingApi.Transactions.Helper.validate_date/2","type":"function"},{"doc":"Transaction Model.Este módulo é responsável por mapear e validar os valores da tabela transaction entre o banco de dados e o Elixir.A transaction table é o local onde são registradas as operações bancárias no banco de dados. É importante armazenar este valor, para poder gerar o relatório de transferências.","ref":"BankingApi.Transactions.Transaction.html","title":"BankingApi.Transactions.Transaction","type":"module"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on.This can be used in your application as:use BankingApiWeb, :controller use BankingApiWeb, :viewThe definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases.Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"BankingApiWeb.html","title":"BankingApiWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"BankingApiWeb.html#__using__/1","title":"BankingApiWeb.__using__/1","type":"macro"},{"doc":"","ref":"BankingApiWeb.html#channel/0","title":"BankingApiWeb.channel/0","type":"function"},{"doc":"","ref":"BankingApiWeb.html#controller/0","title":"BankingApiWeb.controller/0","type":"function"},{"doc":"","ref":"BankingApiWeb.html#router/0","title":"BankingApiWeb.router/0","type":"function"},{"doc":"","ref":"BankingApiWeb.html#view/0","title":"BankingApiWeb.view/0","type":"function"},{"doc":"Módulo responsável por tratar mensagens de erro e exibir ao usuário final.","ref":"BankingApiWeb.ChangesetView.html","title":"BankingApiWeb.ChangesetView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BankingApiWeb.ChangesetView.html#__resource__/0","title":"BankingApiWeb.ChangesetView.__resource__/0","type":"function"},{"doc":"Exibe ao usuário final a mensagem de erro.","ref":"BankingApiWeb.ChangesetView.html#render/2","title":"BankingApiWeb.ChangesetView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BankingApiWeb.ChangesetView.html#template_not_found/2","title":"BankingApiWeb.ChangesetView.template_not_found/2","type":"function"},{"doc":"Tratar mensagens de erro passadas através do argumento changeset.","ref":"BankingApiWeb.ChangesetView.html#translate_errors/1","title":"BankingApiWeb.ChangesetView.translate_errors/1","type":"function"},{"doc":"","ref":"BankingApiWeb.Endpoint.html","title":"BankingApiWeb.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3.","ref":"BankingApiWeb.Endpoint.html#broadcast/3","title":"BankingApiWeb.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3.","ref":"BankingApiWeb.Endpoint.html#broadcast!/3","title":"BankingApiWeb.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4.","ref":"BankingApiWeb.Endpoint.html#broadcast_from/4","title":"BankingApiWeb.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4.","ref":"BankingApiWeb.Endpoint.html#broadcast_from!/4","title":"BankingApiWeb.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2.","ref":"BankingApiWeb.Endpoint.html#call/2","title":"BankingApiWeb.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"BankingApiWeb.Endpoint.html#child_spec/1","title":"BankingApiWeb.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for keyReturns default if the key does not exist.","ref":"BankingApiWeb.Endpoint.html#config/2","title":"BankingApiWeb.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"BankingApiWeb.Endpoint.html#config_change/2","title":"BankingApiWeb.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"BankingApiWeb.Endpoint.html#host/0","title":"BankingApiWeb.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"BankingApiWeb.Endpoint.html#init/1","title":"BankingApiWeb.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3.","ref":"BankingApiWeb.Endpoint.html#local_broadcast/3","title":"BankingApiWeb.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4.","ref":"BankingApiWeb.Endpoint.html#local_broadcast_from/4","title":"BankingApiWeb.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"BankingApiWeb.Endpoint.html#path/1","title":"BankingApiWeb.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"BankingApiWeb.Endpoint.html#script_name/0","title":"BankingApiWeb.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree.","ref":"BankingApiWeb.Endpoint.html#start_link/1","title":"BankingApiWeb.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static. Meant to be used for Subresource Integrity with CDNs.","ref":"BankingApiWeb.Endpoint.html#static_integrity/1","title":"BankingApiWeb.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity.","ref":"BankingApiWeb.Endpoint.html#static_lookup/1","title":"BankingApiWeb.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static.","ref":"BankingApiWeb.Endpoint.html#static_path/1","title":"BankingApiWeb.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information.It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"BankingApiWeb.Endpoint.html#static_url/0","title":"BankingApiWeb.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct.It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"BankingApiWeb.Endpoint.html#struct_url/0","title":"BankingApiWeb.Endpoint.struct_url/0","type":"function"},{"doc":"","ref":"BankingApiWeb.Endpoint.html#subscribe/2","title":"BankingApiWeb.Endpoint.subscribe/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Endpoint.html#unsubscribe/1","title":"BankingApiWeb.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information.It uses the configuration under :url to generate such.","ref":"BankingApiWeb.Endpoint.html#url/0","title":"BankingApiWeb.Endpoint.url/0","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"BankingApiWeb.ErrorHelpers.html","title":"BankingApiWeb.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"BankingApiWeb.ErrorHelpers.html#error_tag/2","title":"BankingApiWeb.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"BankingApiWeb.ErrorHelpers.html#translate_error/1","title":"BankingApiWeb.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"BankingApiWeb.ErrorView.html","title":"BankingApiWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BankingApiWeb.ErrorView.html#__resource__/0","title":"BankingApiWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Retorna ao usuário final uma mensagem de erro.Os argumentos da função são:A string error_message.json%{message: message}: Um map que contenha o valor da mensagem de erro message","ref":"BankingApiWeb.ErrorView.html#render/2","title":"BankingApiWeb.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BankingApiWeb.ErrorView.html#template_not_found/2","title":"BankingApiWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"O objetivo deste módulo é centralizar a manipulação de erros relacionadas às Controllers da aplicação.","ref":"BankingApiWeb.FallbackController.html","title":"BankingApiWeb.FallbackController","type":"module"},{"doc":"Renderiza a mensagem de erro ao usuário final.Os argumentos da função são:conn: as informações de connection e da request.Uma tupla que contenha o atom :error e a mensagem a ser exibida ao usuário.","ref":"BankingApiWeb.FallbackController.html#call/2","title":"BankingApiWeb.FallbackController.call/2","type":"function"},{"doc":"A module providing Internationalization with a gettext-based API.By using Gettext, your module gains a set of macros for translations, for example:import BankingApiWeb.Gettext # Simple translation gettext(&quot;Here is the string to translate&quot;) # Plural translation ngettext(&quot;Here is the string to translate&quot;, &quot;Here are the strings to translate&quot;, 3) # Domain-based translation dgettext(&quot;errors&quot;, &quot;Here is the error message to translate&quot;)See the Gettext Docs for detailed usage.","ref":"BankingApiWeb.Gettext.html","title":"BankingApiWeb.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3.","ref":"BankingApiWeb.Gettext.html#dgettext/3","title":"BankingApiWeb.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2.","ref":"BankingApiWeb.Gettext.html#dgettext_noop/2","title":"BankingApiWeb.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5.","ref":"BankingApiWeb.Gettext.html#dngettext/5","title":"BankingApiWeb.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3.","ref":"BankingApiWeb.Gettext.html#dngettext_noop/3","title":"BankingApiWeb.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4.","ref":"BankingApiWeb.Gettext.html#dpgettext/4","title":"BankingApiWeb.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"BankingApiWeb.Gettext.html#dpgettext_noop/3","title":"BankingApiWeb.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6.","ref":"BankingApiWeb.Gettext.html#dpngettext/6","title":"BankingApiWeb.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"BankingApiWeb.Gettext.html#dpngettext_noop/4","title":"BankingApiWeb.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2.","ref":"BankingApiWeb.Gettext.html#gettext/2","title":"BankingApiWeb.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1.","ref":"BankingApiWeb.Gettext.html#gettext_comment/1","title":"BankingApiWeb.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1.","ref":"BankingApiWeb.Gettext.html#gettext_noop/1","title":"BankingApiWeb.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2.","ref":"BankingApiWeb.Gettext.html#handle_missing_bindings/2","title":"BankingApiWeb.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6.","ref":"BankingApiWeb.Gettext.html#handle_missing_plural_translation/6","title":"BankingApiWeb.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4.","ref":"BankingApiWeb.Gettext.html#handle_missing_translation/4","title":"BankingApiWeb.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"BankingApiWeb.Gettext.html#lgettext/5","title":"BankingApiWeb.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"BankingApiWeb.Gettext.html#lngettext/7","title":"BankingApiWeb.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4.","ref":"BankingApiWeb.Gettext.html#ngettext/4","title":"BankingApiWeb.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2.","ref":"BankingApiWeb.Gettext.html#ngettext_noop/2","title":"BankingApiWeb.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3.","ref":"BankingApiWeb.Gettext.html#pgettext/3","title":"BankingApiWeb.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"BankingApiWeb.Gettext.html#pgettext_noop/2","title":"BankingApiWeb.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5.","ref":"BankingApiWeb.Gettext.html#pngettext/5","title":"BankingApiWeb.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"BankingApiWeb.Gettext.html#pngettext_noop/3","title":"BankingApiWeb.Gettext.pngettext_noop/3","type":"macro"},{"doc":"","ref":"BankingApiWeb.LayoutView.html","title":"BankingApiWeb.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BankingApiWeb.LayoutView.html#__resource__/0","title":"BankingApiWeb.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"BankingApiWeb.LayoutView.html#render/2","title":"BankingApiWeb.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BankingApiWeb.LayoutView.html#template_not_found/2","title":"BankingApiWeb.LayoutView.template_not_found/2","type":"function"},{"doc":"Operation Controller. Controller responsável por iniciar qualquer operação no back-end a partir de uma requisição da API relacionada a /api/operations.","ref":"BankingApiWeb.OperationController.html","title":"BankingApiWeb.OperationController","type":"module"},{"doc":"Esta função é responsável por iniciar o processo de transferência bancária entre duas contas e renderizar o feedback sobre o status da operação para o usuário.Os argumentos da função são:conn: as informações da conexão%{&quot;to_account&quot; =&gt; to, &quot;amount&quot; =&gt; amount}: Um map que contenha: 2.1. to_account: O número da conta recebedora (id da conta) 2.2. amount: Valor a ser transferido","ref":"BankingApiWeb.OperationController.html#transfer/2","title":"BankingApiWeb.OperationController.transfer/2","type":"function"},{"doc":"Esta função é responsável por iniciar a operação de saque e renderizar o feedback sobre o status do processo para o usuário.Os argumentos da função são:conn: as informações da conexão%{&quot;amount&quot; =&gt; amount}: Um map que contenha: 2.1. amount: Valor a ser transferido","ref":"BankingApiWeb.OperationController.html#withdraw/2","title":"BankingApiWeb.OperationController.withdraw/2","type":"function"},{"doc":"Operation View.Módulo responsável por renderizar ao usuário final o feedback positivo de operações bancárias realizadas","ref":"BankingApiWeb.OperationView.html","title":"BankingApiWeb.OperationView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BankingApiWeb.OperationView.html#__resource__/0","title":"BankingApiWeb.OperationView.__resource__/0","type":"function"},{"doc":"Renderiza ao usuário final o feedback de que a operação realizada foi bem sucedida.Os argumentos da função são:A string &quot;operation_succeeded.json&quot;%{message: message}: um map que contenha: 2.1. message: a mensagem que será exibida ao usuário","ref":"BankingApiWeb.OperationView.html#render/2","title":"BankingApiWeb.OperationView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BankingApiWeb.OperationView.html#template_not_found/2","title":"BankingApiWeb.OperationView.template_not_found/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.html","title":"BankingApiWeb.Router","type":"module"},{"doc":"","ref":"BankingApiWeb.Router.html#api/2","title":"BankingApiWeb.Router.api/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.html#auth/2","title":"BankingApiWeb.Router.auth/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.html#browser/2","title":"BankingApiWeb.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"BankingApiWeb.Router.html#call/2","title":"BankingApiWeb.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"BankingApiWeb.Router.html#init/1","title":"BankingApiWeb.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from BankingApiWeb.Router.","ref":"BankingApiWeb.Router.Helpers.html","title":"BankingApiWeb.Router.Helpers","type":"module"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_path/2","title":"BankingApiWeb.Router.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_path/3","title":"BankingApiWeb.Router.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_path/4","title":"BankingApiWeb.Router.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_path/5","title":"BankingApiWeb.Router.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_url/2","title":"BankingApiWeb.Router.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_url/3","title":"BankingApiWeb.Router.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_url/4","title":"BankingApiWeb.Router.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_url/5","title":"BankingApiWeb.Router.Helpers.live_dashboard_url/5","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#operation_path/2","title":"BankingApiWeb.Router.Helpers.operation_path/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#operation_path/3","title":"BankingApiWeb.Router.Helpers.operation_path/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#operation_url/2","title":"BankingApiWeb.Router.Helpers.operation_url/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#operation_url/3","title":"BankingApiWeb.Router.Helpers.operation_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"BankingApiWeb.Router.Helpers.html#path/2","title":"BankingApiWeb.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"BankingApiWeb.Router.Helpers.html#static_integrity/2","title":"BankingApiWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"BankingApiWeb.Router.Helpers.html#static_path/2","title":"BankingApiWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"BankingApiWeb.Router.Helpers.html#static_url/2","title":"BankingApiWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#transaction_path/2","title":"BankingApiWeb.Router.Helpers.transaction_path/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#transaction_path/3","title":"BankingApiWeb.Router.Helpers.transaction_path/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#transaction_path/4","title":"BankingApiWeb.Router.Helpers.transaction_path/4","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#transaction_path/5","title":"BankingApiWeb.Router.Helpers.transaction_path/5","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#transaction_url/2","title":"BankingApiWeb.Router.Helpers.transaction_url/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#transaction_url/3","title":"BankingApiWeb.Router.Helpers.transaction_url/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#transaction_url/4","title":"BankingApiWeb.Router.Helpers.transaction_url/4","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#transaction_url/5","title":"BankingApiWeb.Router.Helpers.transaction_url/5","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"BankingApiWeb.Router.Helpers.html#url/1","title":"BankingApiWeb.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#user_path/2","title":"BankingApiWeb.Router.Helpers.user_path/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#user_path/3","title":"BankingApiWeb.Router.Helpers.user_path/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#user_url/2","title":"BankingApiWeb.Router.Helpers.user_url/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#user_url/3","title":"BankingApiWeb.Router.Helpers.user_url/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Telemetry.html","title":"BankingApiWeb.Telemetry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"BankingApiWeb.Telemetry.html#child_spec/1","title":"BankingApiWeb.Telemetry.child_spec/1","type":"function"},{"doc":"","ref":"BankingApiWeb.Telemetry.html#metrics/0","title":"BankingApiWeb.Telemetry.metrics/0","type":"function"},{"doc":"","ref":"BankingApiWeb.Telemetry.html#start_link/1","title":"BankingApiWeb.Telemetry.start_link/1","type":"function"},{"doc":"Transaction ControllerController responsável por iniciar qualquer operação no back-end a partir de uma requisição da API relacionada a /api/transaction.","ref":"BankingApiWeb.TransactionController.html","title":"BankingApiWeb.TransactionController","type":"module"},{"doc":"Função responsável por buscar e exibir ao usuário final as transações filtradas por year.Os argumentos da função são:conn: as informações da conexão%{&quot;year&quot; =&gt; year}: Um map contendo o ano (year) que é passado na requisição.Observação: o campo year deve seguir o formato: &quot;yyyy&quot;.O retorno da função é o feedback da requisição, que em caso de sucesso é localizado em show.json e em caso de falha é localizado em BankingApiWeb.FallbackController","ref":"BankingApiWeb.TransactionController.html#generate_anual_report/2","title":"BankingApiWeb.TransactionController.generate_anual_report/2","type":"function"},{"doc":"Função responsável por buscar e exibir ao usuário final as transações filtradas por uma data específica.Os argumentos da função são:conn: as informações da conexão%{&quot;day&quot; =&gt; day}: Um map contendo a data (day), que é passada na requisição.Obs: O campo day deve seguir formato: &quot;yyyy-mm-dd&quot;.O retorno da função é o feedback da requisição, que em caso de sucesso é localizado em show.json e em caso de falha é localizado em BankingApiWeb.FallbackController","ref":"BankingApiWeb.TransactionController.html#generate_daily_report/2","title":"BankingApiWeb.TransactionController.generate_daily_report/2","type":"function"},{"doc":"Função responsável por buscar e exibir ao usuário final todas as transações armazenadas no banco de dados.Os argumentos da função são:conn: as informações da conexão_params: Os parâmetros adicionados no request, que neste caso são nulosO retorno da função é o feedback da requisição, que em caso de sucesso é localizado em show.json e em caso de falha é localizado em BankingApiWeb.FallbackController","ref":"BankingApiWeb.TransactionController.html#generate_entire_life_report/2","title":"BankingApiWeb.TransactionController.generate_entire_life_report/2","type":"function"},{"doc":"Função responsável por buscar e exibir ao usuário final as transações filtradas por mês e ano.Os argumentos da função são:conn: as informações da conexãomap: Um map que contém: 2.1. &quot;year&quot; =&gt; year: o ano das transações 2.2. &quot;month&quot; =&gt; month: mês das transaçõesObservação:O campo year deve seguir o formato: &quot;yyyy&quot;.O campo month deve seguir o formato: &quot;mm&quot;O retorno da função é o feedback da requisição, que em caso de sucesso é localizado em show.json e em caso de falha é localizado em BankingApiWeb.FallbackController","ref":"BankingApiWeb.TransactionController.html#generate_monthly_report/2","title":"BankingApiWeb.TransactionController.generate_monthly_report/2","type":"function"},{"doc":"Transaction View.Esse módulo é responsável por renderizar ao usuário final os reports de transações por data","ref":"BankingApiWeb.TransactionView.html","title":"BankingApiWeb.TransactionView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BankingApiWeb.TransactionView.html#__resource__/0","title":"BankingApiWeb.TransactionView.__resource__/0","type":"function"},{"doc":"Prepara a lista de transações para ser exibida ao usuário final.Os argumentos da função são:A string report.json.%{transaction: transaction}: Um map que contém a lista de transações a ser exibida e o total operado.","ref":"BankingApiWeb.TransactionView.html#render/2","title":"BankingApiWeb.TransactionView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BankingApiWeb.TransactionView.html#template_not_found/2","title":"BankingApiWeb.TransactionView.template_not_found/2","type":"function"},{"doc":"User Controller.Controller responsável por iniciar qualquer operação no back-end a partir de uma requisição da API relacionada a /api/auth ou /api/user.","ref":"BankingApiWeb.UserController.html","title":"BankingApiWeb.UserController","type":"module"},{"doc":"Buscar um usuário pelo id e renderizar as informações deste usuário obtido.Os argumentos da função são:conn: as informações de conexão%{&quot;id&quot; =&gt; id}: Um map que contenha: 2.1. id: O email do usuário","ref":"BankingApiWeb.UserController.html#show/2","title":"BankingApiWeb.UserController.show/2","type":"function"},{"doc":"Autentica um usuário no sistema e renderizar o feedback de signin para o usuário finalOs argumentos da função são:conn: as informações de conexão%{&quot;email&quot; =&gt; email, &quot;password&quot; =&gt; password}: Um map que contenha: 2.1. email: O email do usuário 2.2. password: A senha do usuário","ref":"BankingApiWeb.UserController.html#signin/2","title":"BankingApiWeb.UserController.signin/2","type":"function"},{"doc":"Cadastra um novo usuário no sistema e criar uma nova conta bancária para este usuário.Os argumentos da função são:conn: as informações de conexão%{&quot;user&quot; =&gt; user}: Um map que contenha: 2.1. user: A user struct a ser criada no sistema","ref":"BankingApiWeb.UserController.html#signup/2","title":"BankingApiWeb.UserController.signup/2","type":"function"},{"doc":"","ref":"BankingApiWeb.UserSocket.html","title":"BankingApiWeb.UserSocket","type":"module"},{"doc":"User View.Módulo responsável por renderizar ao usuário final o feedback sobre as requisições requisições da API relacionadas a /api/auth e /api/user.","ref":"BankingApiWeb.UserView.html","title":"BankingApiWeb.UserView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BankingApiWeb.UserView.html#__resource__/0","title":"BankingApiWeb.UserView.__resource__/0","type":"function"},{"doc":"Renderiza o feedback de signin quando o usuário é autenticado com sucesso no sistema.Os argumentos da função são:A string &quot;user_auth.json&quot;Um map que contenha as propriedades: 2.1. user: Uma user struct 2.2. token: Uma string com o valor token gerado pelo framework de autenticação, Guardian","ref":"BankingApiWeb.UserView.html#render/2","title":"BankingApiWeb.UserView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BankingApiWeb.UserView.html#template_not_found/2","title":"BankingApiWeb.UserView.template_not_found/2","type":"function"}]