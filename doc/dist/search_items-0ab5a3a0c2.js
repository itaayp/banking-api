searchNodes=[{"doc":"BankingApi keeps the contexts that define your domain and business logic.Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.","ref":"BankingApi.html","title":"BankingApi","type":"module"},{"doc":"Este módulo representa a Accounts Context. Este módulo é responsável por expor as funcionalidades relacionadas à acounts e users. Resumidamente, o objetivo do context é desacoplar a responsabilidade de models e controllers.","ref":"BankingApi.Accounts.html","title":"BankingApi.Accounts","type":"module"},{"doc":"Função responsável por criar um user(usuário) e uma account(conta bancária) e a associação entre eles no banco de dados O argumento params são os dados do user a serem inseridos. O retorno da função é uma tupla de {:ok, user, account} ou {:error, changeset}","ref":"BankingApi.Accounts.html#create_user/1","title":"BankingApi.Accounts.create_user/1","type":"function"},{"doc":"Esta função buscar uma account baseada em um id passado por parâmetro. O único parâmetro desta função é o account id. O retorno desta função é uma struct de account.","ref":"BankingApi.Accounts.html#get!/1","title":"BankingApi.Accounts.get!/1","type":"function"},{"doc":"Esta função busca o user pelo id, vincula o resultado com a informação da conta bancária account. O argumento da função é o user id. O retorno da função é um map do usuário vinculado com a respectiva conta bancária.","ref":"BankingApi.Accounts.html#get_user!/1","title":"BankingApi.Accounts.get_user!/1","type":"function"},{"doc":"Essa é a Account Model. Este módulo é responsável por mapear os valores do banco de dados com o Elixir e validá-los.","ref":"BankingApi.Accounts.Account.html","title":"BankingApi.Accounts.Account","type":"module"},{"doc":"Essa é a referência no código Elixir para a tabela accounts no banco de dados.","ref":"BankingApi.Accounts.Account.html#__struct__/0","title":"BankingApi.Accounts.Account.__struct__/0","type":"function"},{"doc":"Essa função converte a informação para o formato do Elixir e às valida. Os parâmetros da função são a account struct que será usada para identificar a tabela no banco de dados, e o params, que são os dados que serão inseridos no BD","ref":"BankingApi.Accounts.Account.html#changeset/2","title":"BankingApi.Accounts.Account.changeset/2","type":"function"},{"doc":"Esse é o User Model. Este módulo é responsável por mapear os valores do banco de dados com o Elixir e validá-los.","ref":"BankingApi.Accounts.User.html","title":"BankingApi.Accounts.User","type":"module"},{"doc":"Essa é a referência no código Elixir para a tabela users no banco de dados.","ref":"BankingApi.Accounts.User.html#__struct__/0","title":"BankingApi.Accounts.User.__struct__/0","type":"function"},{"doc":"Essa função converte a informação para o formato do Elixir e às valida. Os parâmetros da função são a user struct que será usada para identificar a tabela no banco de dados, e o params, que são os dados que serão inseridos no BD","ref":"BankingApi.Accounts.User.html#changeset/2","title":"BankingApi.Accounts.User.changeset/2","type":"function"},{"doc":"Este é o Operations Context. Este módulo é responsável por expor as funcionalidades relacionadas às operações de transfer e withdraw. Resumidamente, o objetivo de um context é desacoplar a responsabilidade de models e controllers.","ref":"BankingApi.Operations.html","title":"BankingApi.Operations","type":"module"},{"doc":"A função perform_operation/3 que recebe como último parâmetro o atom :sum é responsável por realizar a operação de soma na account passada por parâmetro. Os argumentos da função são uma struct account, a quantidade amount a ser somada e o atom :sum. O retorno da função é uma tupla contendo o status da operação de update no banco de dados.","ref":"BankingApi.Operations.html#perform_operation/3","title":"BankingApi.Operations.perform_operation/3","type":"function"},{"doc":"Esta função é responsável validar se a operação de subtração da conta pagadora (from) foi concluida, e se for realizar a operação de soma na conta recebedora (to_id) Os argumentos da função são uma struct de account que representa a conta pagadora (from), o id da conta recebedora (to_id) e a quantidade a ser transferida (amount)","ref":"BankingApi.Operations.html#perform_update/3","title":"BankingApi.Operations.perform_update/3","type":"function"},{"doc":"Esta função é responsável por operar a transferência bancária entre duas contas. Os argumentos desta função são o id da conta pagadora: from_id, o id da conta recebedora: to_id, e a quantidade a ser transferida: amount. O retorno da função é um map contendo o atom :error ou :ok. Representando se o status da operação foi ou não realizada. Um dos possíveis motivos da operação não ser realizada, é se o valor amount a ser transferido é maior do que from.balance.","ref":"BankingApi.Operations.html#transfer/3","title":"BankingApi.Operations.transfer/3","type":"function"},{"doc":"Esta função é responsável por realizar a operação de update de uma account no banco de dados. Os argumentos da função são a struc da account que será atualizada, e o map params que contém os valores a serem atualizados. O retorno da função é uma tupla contendo o status da operação de update no banco de dados.","ref":"BankingApi.Operations.html#update_account/2","title":"BankingApi.Operations.update_account/2","type":"function"},{"doc":"Esta função é responsável por operar a operação de saque.Os argumentos desta função são:from_id: Número da conta (id da conta) que realizará o saque.amount: Quantidade a ser transferida.O retorno da função é um map contendo o atom :error ou :ok. Representando se o status da operação foi ou não realizada.Um dos possíveis motivos da operação não ser realizada, é se o valor amount é maior do que from.balance.","ref":"BankingApi.Operations.html#withdraw/2","title":"BankingApi.Operations.withdraw/2","type":"function"},{"doc":"","ref":"BankingApi.Repo.html","title":"BankingApi.Repo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3.","ref":"BankingApi.Repo.html#aggregate/3","title":"BankingApi.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4.","ref":"BankingApi.Repo.html#aggregate/4","title":"BankingApi.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2.","ref":"BankingApi.Repo.html#all/2","title":"BankingApi.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2.","ref":"BankingApi.Repo.html#checkout/2","title":"BankingApi.Repo.checkout/2","type":"function"},{"doc":"","ref":"BankingApi.Repo.html#child_spec/1","title":"BankingApi.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0.","ref":"BankingApi.Repo.html#config/0","title":"BankingApi.Repo.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1.","ref":"BankingApi.Repo.html#default_options/1","title":"BankingApi.Repo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2.","ref":"BankingApi.Repo.html#delete/2","title":"BankingApi.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2.","ref":"BankingApi.Repo.html#delete!/2","title":"BankingApi.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2.","ref":"BankingApi.Repo.html#delete_all/2","title":"BankingApi.Repo.delete_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2.","ref":"BankingApi.Repo.html#exists?/2","title":"BankingApi.Repo.exists?/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3.","ref":"BankingApi.Repo.html#get/3","title":"BankingApi.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3.","ref":"BankingApi.Repo.html#get!/3","title":"BankingApi.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3.","ref":"BankingApi.Repo.html#get_by/3","title":"BankingApi.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3.","ref":"BankingApi.Repo.html#get_by!/3","title":"BankingApi.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0.","ref":"BankingApi.Repo.html#get_dynamic_repo/0","title":"BankingApi.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0.","ref":"BankingApi.Repo.html#in_transaction?/0","title":"BankingApi.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2.","ref":"BankingApi.Repo.html#insert/2","title":"BankingApi.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2.","ref":"BankingApi.Repo.html#insert!/2","title":"BankingApi.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3.","ref":"BankingApi.Repo.html#insert_all/3","title":"BankingApi.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2.","ref":"BankingApi.Repo.html#insert_or_update/2","title":"BankingApi.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2.","ref":"BankingApi.Repo.html#insert_or_update!/2","title":"BankingApi.Repo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2.","ref":"BankingApi.Repo.html#load/2","title":"BankingApi.Repo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2.","ref":"BankingApi.Repo.html#one/2","title":"BankingApi.Repo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2.","ref":"BankingApi.Repo.html#one!/2","title":"BankingApi.Repo.one!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3.","ref":"BankingApi.Repo.html#preload/3","title":"BankingApi.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3.","ref":"BankingApi.Repo.html#prepare_query/3","title":"BankingApi.Repo.prepare_query/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1.","ref":"BankingApi.Repo.html#put_dynamic_repo/1","title":"BankingApi.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query/4 for more information.","ref":"BankingApi.Repo.html#query/3","title":"BankingApi.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query!/4 for more information.","ref":"BankingApi.Repo.html#query!/3","title":"BankingApi.Repo.query!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1.","ref":"BankingApi.Repo.html#rollback/1","title":"BankingApi.Repo.rollback/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1.","ref":"BankingApi.Repo.html#start_link/1","title":"BankingApi.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1.","ref":"BankingApi.Repo.html#stop/1","title":"BankingApi.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2.","ref":"BankingApi.Repo.html#stream/2","title":"BankingApi.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL.See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"BankingApi.Repo.html#to_sql/2","title":"BankingApi.Repo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2.","ref":"BankingApi.Repo.html#transaction/2","title":"BankingApi.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2.","ref":"BankingApi.Repo.html#update/2","title":"BankingApi.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2.","ref":"BankingApi.Repo.html#update!/2","title":"BankingApi.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3.","ref":"BankingApi.Repo.html#update_all/3","title":"BankingApi.Repo.update_all/3","type":"function"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on.This can be used in your application as:use BankingApiWeb, :controller use BankingApiWeb, :viewThe definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases.Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"BankingApiWeb.html","title":"BankingApiWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"BankingApiWeb.html#__using__/1","title":"BankingApiWeb.__using__/1","type":"macro"},{"doc":"","ref":"BankingApiWeb.html#channel/0","title":"BankingApiWeb.channel/0","type":"function"},{"doc":"","ref":"BankingApiWeb.html#controller/0","title":"BankingApiWeb.controller/0","type":"function"},{"doc":"","ref":"BankingApiWeb.html#router/0","title":"BankingApiWeb.router/0","type":"function"},{"doc":"","ref":"BankingApiWeb.html#view/0","title":"BankingApiWeb.view/0","type":"function"},{"doc":"Este módulo é responsável por tratar mensagens de erro e exibir para o usuário final. Os erros tratados são relacionados a criação de user e account.","ref":"BankingApiWeb.ChangesetView.html","title":"BankingApiWeb.ChangesetView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BankingApiWeb.ChangesetView.html#__resource__/0","title":"BankingApiWeb.ChangesetView.__resource__/0","type":"function"},{"doc":"A função render é responsável por exibir para o usuário final a mensagem de erro relacionada a criação de user e de account","ref":"BankingApiWeb.ChangesetView.html#render/2","title":"BankingApiWeb.ChangesetView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BankingApiWeb.ChangesetView.html#template_not_found/2","title":"BankingApiWeb.ChangesetView.template_not_found/2","type":"function"},{"doc":"Esta função é responsável por resgatar e tratar mensagens de erro passadas através do argumento changeset","ref":"BankingApiWeb.ChangesetView.html#translate_errors/1","title":"BankingApiWeb.ChangesetView.translate_errors/1","type":"function"},{"doc":"","ref":"BankingApiWeb.Endpoint.html","title":"BankingApiWeb.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3.","ref":"BankingApiWeb.Endpoint.html#broadcast/3","title":"BankingApiWeb.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3.","ref":"BankingApiWeb.Endpoint.html#broadcast!/3","title":"BankingApiWeb.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4.","ref":"BankingApiWeb.Endpoint.html#broadcast_from/4","title":"BankingApiWeb.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4.","ref":"BankingApiWeb.Endpoint.html#broadcast_from!/4","title":"BankingApiWeb.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2.","ref":"BankingApiWeb.Endpoint.html#call/2","title":"BankingApiWeb.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"BankingApiWeb.Endpoint.html#child_spec/1","title":"BankingApiWeb.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for keyReturns default if the key does not exist.","ref":"BankingApiWeb.Endpoint.html#config/2","title":"BankingApiWeb.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"BankingApiWeb.Endpoint.html#config_change/2","title":"BankingApiWeb.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"BankingApiWeb.Endpoint.html#host/0","title":"BankingApiWeb.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"BankingApiWeb.Endpoint.html#init/1","title":"BankingApiWeb.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3.","ref":"BankingApiWeb.Endpoint.html#local_broadcast/3","title":"BankingApiWeb.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4.","ref":"BankingApiWeb.Endpoint.html#local_broadcast_from/4","title":"BankingApiWeb.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"BankingApiWeb.Endpoint.html#path/1","title":"BankingApiWeb.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"BankingApiWeb.Endpoint.html#script_name/0","title":"BankingApiWeb.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree.","ref":"BankingApiWeb.Endpoint.html#start_link/1","title":"BankingApiWeb.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static. Meant to be used for Subresource Integrity with CDNs.","ref":"BankingApiWeb.Endpoint.html#static_integrity/1","title":"BankingApiWeb.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity.","ref":"BankingApiWeb.Endpoint.html#static_lookup/1","title":"BankingApiWeb.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static.","ref":"BankingApiWeb.Endpoint.html#static_path/1","title":"BankingApiWeb.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information.It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"BankingApiWeb.Endpoint.html#static_url/0","title":"BankingApiWeb.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct.It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"BankingApiWeb.Endpoint.html#struct_url/0","title":"BankingApiWeb.Endpoint.struct_url/0","type":"function"},{"doc":"","ref":"BankingApiWeb.Endpoint.html#subscribe/2","title":"BankingApiWeb.Endpoint.subscribe/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Endpoint.html#unsubscribe/1","title":"BankingApiWeb.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information.It uses the configuration under :url to generate such.","ref":"BankingApiWeb.Endpoint.html#url/0","title":"BankingApiWeb.Endpoint.url/0","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"BankingApiWeb.ErrorHelpers.html","title":"BankingApiWeb.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"BankingApiWeb.ErrorHelpers.html#error_tag/2","title":"BankingApiWeb.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"BankingApiWeb.ErrorHelpers.html#translate_error/1","title":"BankingApiWeb.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"BankingApiWeb.ErrorView.html","title":"BankingApiWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BankingApiWeb.ErrorView.html#__resource__/0","title":"BankingApiWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Esta função é responsável por retornar ao usuário final uma mensagem de erro. Os argumentos da função são a string error_message.json e um map contendo uma message O retorno da função é um map contendo a mesma message passada como parâmetro","ref":"BankingApiWeb.ErrorView.html#render/2","title":"BankingApiWeb.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BankingApiWeb.ErrorView.html#template_not_found/2","title":"BankingApiWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"O objetivo deste módulo é centralizar a manipulação de erros relacionadas ao BankingApiWeb.UserController.","ref":"BankingApiWeb.FallbackController.html","title":"BankingApiWeb.FallbackController","type":"module"},{"doc":"A função call é responsável por retornar uma mensagem de erro ao usuário final quando há algum problema durante alguma operation, seja ela de transfer ou de withdraw. Os argumentos da função são as informações de connection conn e a mensagem de erro: message.","ref":"BankingApiWeb.FallbackController.html#call/2","title":"BankingApiWeb.FallbackController.call/2","type":"function"},{"doc":"A module providing Internationalization with a gettext-based API.By using Gettext, your module gains a set of macros for translations, for example:import BankingApiWeb.Gettext # Simple translation gettext(&quot;Here is the string to translate&quot;) # Plural translation ngettext(&quot;Here is the string to translate&quot;, &quot;Here are the strings to translate&quot;, 3) # Domain-based translation dgettext(&quot;errors&quot;, &quot;Here is the error message to translate&quot;)See the Gettext Docs for detailed usage.","ref":"BankingApiWeb.Gettext.html","title":"BankingApiWeb.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3.","ref":"BankingApiWeb.Gettext.html#dgettext/3","title":"BankingApiWeb.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2.","ref":"BankingApiWeb.Gettext.html#dgettext_noop/2","title":"BankingApiWeb.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5.","ref":"BankingApiWeb.Gettext.html#dngettext/5","title":"BankingApiWeb.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3.","ref":"BankingApiWeb.Gettext.html#dngettext_noop/3","title":"BankingApiWeb.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4.","ref":"BankingApiWeb.Gettext.html#dpgettext/4","title":"BankingApiWeb.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"BankingApiWeb.Gettext.html#dpgettext_noop/3","title":"BankingApiWeb.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6.","ref":"BankingApiWeb.Gettext.html#dpngettext/6","title":"BankingApiWeb.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"BankingApiWeb.Gettext.html#dpngettext_noop/4","title":"BankingApiWeb.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2.","ref":"BankingApiWeb.Gettext.html#gettext/2","title":"BankingApiWeb.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1.","ref":"BankingApiWeb.Gettext.html#gettext_comment/1","title":"BankingApiWeb.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1.","ref":"BankingApiWeb.Gettext.html#gettext_noop/1","title":"BankingApiWeb.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2.","ref":"BankingApiWeb.Gettext.html#handle_missing_bindings/2","title":"BankingApiWeb.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6.","ref":"BankingApiWeb.Gettext.html#handle_missing_plural_translation/6","title":"BankingApiWeb.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4.","ref":"BankingApiWeb.Gettext.html#handle_missing_translation/4","title":"BankingApiWeb.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"BankingApiWeb.Gettext.html#lgettext/5","title":"BankingApiWeb.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"BankingApiWeb.Gettext.html#lngettext/7","title":"BankingApiWeb.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4.","ref":"BankingApiWeb.Gettext.html#ngettext/4","title":"BankingApiWeb.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2.","ref":"BankingApiWeb.Gettext.html#ngettext_noop/2","title":"BankingApiWeb.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3.","ref":"BankingApiWeb.Gettext.html#pgettext/3","title":"BankingApiWeb.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"BankingApiWeb.Gettext.html#pgettext_noop/2","title":"BankingApiWeb.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5.","ref":"BankingApiWeb.Gettext.html#pngettext/5","title":"BankingApiWeb.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"BankingApiWeb.Gettext.html#pngettext_noop/3","title":"BankingApiWeb.Gettext.pngettext_noop/3","type":"macro"},{"doc":"","ref":"BankingApiWeb.LayoutView.html","title":"BankingApiWeb.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BankingApiWeb.LayoutView.html#__resource__/0","title":"BankingApiWeb.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"BankingApiWeb.LayoutView.html#render/2","title":"BankingApiWeb.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BankingApiWeb.LayoutView.html#template_not_found/2","title":"BankingApiWeb.LayoutView.template_not_found/2","type":"function"},{"doc":"Esse é o Controller responsável por todas as operações bancárias (transferência e saque).","ref":"BankingApiWeb.OperationController.html","title":"BankingApiWeb.OperationController","type":"module"},{"doc":"A função transfer/2 é responsável por iniciar o processo de transferência bancária entre duas contas e renderizar o feedback sobre o status da operação para o usuário final. Os argumentos da função são as informações da conexão: conn e um map contendo o id da conta pagadora (número da conta): from_account, o id da conta recebedora (número da conta): to_account e o valor transferido: amount","ref":"BankingApiWeb.OperationController.html#transfer/2","title":"BankingApiWeb.OperationController.transfer/2","type":"function"},{"doc":"Esta função é responsável por iniciar a operação de saque e renderizar o feedback sobre o status do processo para o usuário final. Os argumentos da função são as informações da conexão: conn e um map contendo o id da conta (número da conta) que fará o saque: from_account, e o valor transferido: amount","ref":"BankingApiWeb.OperationController.html#withdraw/2","title":"BankingApiWeb.OperationController.withdraw/2","type":"function"},{"doc":"Essa é a Operation View. Este módulo é responsável pelo layout que é apresentado ao usuário após chamar requisições relacionadas às operações, como transferência e saque","ref":"BankingApiWeb.OperationView.html","title":"BankingApiWeb.OperationView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BankingApiWeb.OperationView.html#__resource__/0","title":"BankingApiWeb.OperationView.__resource__/0","type":"function"},{"doc":"Essa função é responsável por renderizar para o usuário final o feedback de que a operação realizada foi bem sucedida. Os argumentos da função são a string &quot;operation_succeeded.json&quot; e um map contendo o valor message que será exibido ao usuário","ref":"BankingApiWeb.OperationView.html#render/2","title":"BankingApiWeb.OperationView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BankingApiWeb.OperationView.html#template_not_found/2","title":"BankingApiWeb.OperationView.template_not_found/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.html","title":"BankingApiWeb.Router","type":"module"},{"doc":"","ref":"BankingApiWeb.Router.html#api/2","title":"BankingApiWeb.Router.api/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.html#browser/2","title":"BankingApiWeb.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"BankingApiWeb.Router.html#call/2","title":"BankingApiWeb.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"BankingApiWeb.Router.html#init/1","title":"BankingApiWeb.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from BankingApiWeb.Router.","ref":"BankingApiWeb.Router.Helpers.html","title":"BankingApiWeb.Router.Helpers","type":"module"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_path/2","title":"BankingApiWeb.Router.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_path/3","title":"BankingApiWeb.Router.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_path/4","title":"BankingApiWeb.Router.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_path/5","title":"BankingApiWeb.Router.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_url/2","title":"BankingApiWeb.Router.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_url/3","title":"BankingApiWeb.Router.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_url/4","title":"BankingApiWeb.Router.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#live_dashboard_url/5","title":"BankingApiWeb.Router.Helpers.live_dashboard_url/5","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#operation_path/2","title":"BankingApiWeb.Router.Helpers.operation_path/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#operation_path/3","title":"BankingApiWeb.Router.Helpers.operation_path/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#operation_url/2","title":"BankingApiWeb.Router.Helpers.operation_url/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#operation_url/3","title":"BankingApiWeb.Router.Helpers.operation_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"BankingApiWeb.Router.Helpers.html#path/2","title":"BankingApiWeb.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"BankingApiWeb.Router.Helpers.html#static_integrity/2","title":"BankingApiWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"BankingApiWeb.Router.Helpers.html#static_path/2","title":"BankingApiWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"BankingApiWeb.Router.Helpers.html#static_url/2","title":"BankingApiWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"BankingApiWeb.Router.Helpers.html#url/1","title":"BankingApiWeb.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#user_path/2","title":"BankingApiWeb.Router.Helpers.user_path/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#user_path/3","title":"BankingApiWeb.Router.Helpers.user_path/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#user_url/2","title":"BankingApiWeb.Router.Helpers.user_url/2","type":"function"},{"doc":"","ref":"BankingApiWeb.Router.Helpers.html#user_url/3","title":"BankingApiWeb.Router.Helpers.user_url/3","type":"function"},{"doc":"","ref":"BankingApiWeb.Telemetry.html","title":"BankingApiWeb.Telemetry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"BankingApiWeb.Telemetry.html#child_spec/1","title":"BankingApiWeb.Telemetry.child_spec/1","type":"function"},{"doc":"","ref":"BankingApiWeb.Telemetry.html#metrics/0","title":"BankingApiWeb.Telemetry.metrics/0","type":"function"},{"doc":"","ref":"BankingApiWeb.Telemetry.html#start_link/1","title":"BankingApiWeb.Telemetry.start_link/1","type":"function"},{"doc":"Esse é o User Controller. Este módulo é o primeiro contato entre as requisições e o back-end","ref":"BankingApiWeb.UserController.html","title":"BankingApiWeb.UserController","type":"module"},{"doc":"Esta função é responsável por buscar um usuário pelo id e renderizar as informações deste usuário obtido. Os argumentos da função são as informações de conexão conn e o id do usuário que será resgatado","ref":"BankingApiWeb.UserController.html#show/2","title":"BankingApiWeb.UserController.show/2","type":"function"},{"doc":"A função signup é responsável por cadastrar um novo usuário no sistema e criar uma nova conta bancária para este usuário. O argumento user da função são os dados do novo usuário que será inserido no sistema. O retorno da função é a resposta ao usuário final que pode ser: uma mensagem informativa, caso o retorno de create_user tenha retornado {:ok, user, account}, ou uma mensagem de erro, caso o retorno de create_user tenha sido outro. Neste segundo caso, o Plug BankingApiWeb.FallbackController.call() é invocado, e lá e construida o feedback de erro para o usuário.","ref":"BankingApiWeb.UserController.html#signup/2","title":"BankingApiWeb.UserController.signup/2","type":"function"},{"doc":"","ref":"BankingApiWeb.UserSocket.html","title":"BankingApiWeb.UserSocket","type":"module"},{"doc":"Essa é a User View. Esse módulo é responsável pelo layout que é apresentado ao usuário após chamar requisições relacionadas ao user","ref":"BankingApiWeb.UserView.html","title":"BankingApiWeb.UserView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BankingApiWeb.UserView.html#__resource__/0","title":"BankingApiWeb.UserView.__resource__/0","type":"function"},{"doc":"retorna um map contendo as informações de um usuário. Os argumentos da função são a string &quot;user.json&quot; e um map contendo a struct de user","ref":"BankingApiWeb.UserView.html#render/2","title":"BankingApiWeb.UserView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BankingApiWeb.UserView.html#template_not_found/2","title":"BankingApiWeb.UserView.template_not_found/2","type":"function"}]